<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>104, 17</value>
  </metadata>
</root>